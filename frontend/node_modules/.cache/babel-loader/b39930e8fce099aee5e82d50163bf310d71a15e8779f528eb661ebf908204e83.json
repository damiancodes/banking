{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{transactionsApi}from'../utils/api';export const useTransactions=()=>{const[transactions,setTransactions]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[creating,setCreating]=useState(false);const fetchTransactions=useCallback(async filters=>{try{setLoading(true);setError(null);const data=await transactionsApi.getAll(filters);setTransactions(data);}catch(err){console.error('Error fetching transactions:',err);setError('Failed to load transactions. Please try again.');}finally{setLoading(false);}},[]);const createTransaction=useCallback(async transferData=>{try{setCreating(true);setError(null);const newTransaction=await transactionsApi.create(transferData);// Add to local state\nsetTransactions(prev=>[newTransaction,...prev]);return newTransaction;}catch(err){var _err$response,_err$response$data,_err$response$data$er;console.error('Error creating transaction:',err);const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:(_err$response$data$er=_err$response$data.error)===null||_err$response$data$er===void 0?void 0:_err$response$data$er.message)||'Failed to create transaction. Please try again.';setError(errorMessage);return null;}finally{setCreating(false);}},[]);const getRecentTransactions=useCallback(function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;return transactions.slice(0,limit);},[transactions]);const getTransactionsByAccount=useCallback(accountName=>{return transactions.filter(transaction=>transaction.from_account===accountName||transaction.to_account===accountName);},[transactions]);const getTransactionsByCurrency=useCallback(currency=>{return transactions.filter(transaction=>transaction.currency===currency);},[transactions]);const refreshTransactions=useCallback(()=>{fetchTransactions();},[fetchTransactions]);useEffect(()=>{fetchTransactions();},[fetchTransactions]);return{transactions,loading,error,creating,createTransaction,getRecentTransactions,getTransactionsByAccount,getTransactionsByCurrency,refreshTransactions,fetchTransactions};};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
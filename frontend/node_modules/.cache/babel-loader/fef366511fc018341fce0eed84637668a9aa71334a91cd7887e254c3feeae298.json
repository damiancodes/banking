{"ast":null,"code":"var _jsxFileName = \"/home/damien/Desktop/Treasury Movement Simulator/frontend/src/components/LoadingSpinner.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'md',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `animate-spin rounded-full border-2 border-gray-300 border-t-kcb-primary ${sizeClasses[size]} ${className}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","className","sizeClasses","sm","md","lg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/damien/Desktop/Treasury Movement Simulator/frontend/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ size = 'md', className = '' }) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8'\n  };\n\n  return (\n    <div className={`animate-spin rounded-full border-2 border-gray-300 border-t-kcb-primary ${sizeClasses[size]} ${className}`}></div>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,IAAI,GAAG,IAAI;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EACzF,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE;EACN,CAAC;EAED,oBACEP,OAAA;IAAKG,SAAS,EAAE,2EAA2EC,WAAW,CAACF,IAAI,CAAC,IAAIC,SAAS;EAAG;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEvI,CAAC;AAACC,EAAA,GAVIX,cAA6C;AAYnD,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/damien/Desktop/Treasury Movement Simulator/frontend/src/pages/TransferPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header';\nimport TransferForm from '../components/TransferForm';\nimport SuccessMessage from '../components/SuccessMessage';\nimport { useAccounts } from '../hooks/useAccounts';\nimport { useTransactions } from '../hooks/useTransactions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransferPage = () => {\n  _s();\n  const {\n    accounts,\n    getTotalBalance,\n    refreshAccounts\n  } = useAccounts();\n  const {\n    createTransaction,\n    loading,\n    error,\n    refreshTransactions\n  } = useTransactions();\n  const [successMessage, setSuccessMessage] = useState(null);\n  const handleSubmit = async data => {\n    const result = await createTransaction(data);\n    if (result) {\n      setSuccessMessage('Transfer completed successfully!');\n      refreshAccounts();\n      refreshTransactions();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      totalBalance: getTotalBalance(),\n      userName: \"Treasury Manager\",\n      onRefresh: () => {},\n      isRefreshing: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-6\",\n      children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(SuccessMessage, {\n          message: successMessage,\n          autoHide: true,\n          onClose: () => setSuccessMessage(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransferForm, {\n        accounts: accounts,\n        onSubmit: handleSubmit,\n        loading: loading,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TransferPage, \"wr/Ua7wa32o5bdthdi55JizMTic=\", false, function () {\n  return [useAccounts, useTransactions];\n});\n_c = TransferPage;\nexport default TransferPage;\nvar _c;\n$RefreshReg$(_c, \"TransferPage\");","map":{"version":3,"names":["React","useState","Header","TransferForm","SuccessMessage","useAccounts","useTransactions","jsxDEV","_jsxDEV","Fragment","_Fragment","TransferPage","_s","accounts","getTotalBalance","refreshAccounts","createTransaction","loading","error","refreshTransactions","successMessage","setSuccessMessage","handleSubmit","data","result","children","totalBalance","userName","onRefresh","isRefreshing","fileName","_jsxFileName","lineNumber","columnNumber","className","message","autoHide","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/home/damien/Desktop/Treasury Movement Simulator/frontend/src/pages/TransferPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/Header';\nimport TransferForm from '../components/TransferForm';\nimport SuccessMessage from '../components/SuccessMessage';\nimport { useAccounts } from '../hooks/useAccounts';\nimport { useTransactions } from '../hooks/useTransactions';\nimport { TransferRequest } from '../types';\n\nconst TransferPage: React.FC = () => {\n  const { accounts, getTotalBalance, refreshAccounts } = useAccounts();\n  const { createTransaction, loading, error, refreshTransactions } = useTransactions();\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  const handleSubmit = async (data: TransferRequest) => {\n    const result = await createTransaction(data);\n    if (result) {\n      setSuccessMessage('Transfer completed successfully!');\n      refreshAccounts();\n      refreshTransactions();\n    }\n  };\n\n  return (\n    <>\n      <Header totalBalance={getTotalBalance()} userName=\"Treasury Manager\" onRefresh={() => {}} isRefreshing={loading} />\n      <div className=\"pt-6\">\n        {successMessage && (\n          <div className=\"mb-4\">\n            <SuccessMessage message={successMessage} autoHide={true} onClose={() => setSuccessMessage(null)} />\n          </div>\n        )}\n        <TransferForm\n          accounts={accounts}\n          onSubmit={handleSubmit}\n          loading={loading}\n          error={error}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default TransferPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG3D,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,QAAQ;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAAGV,WAAW,CAAC,CAAC;EACpE,MAAM;IAAEW,iBAAiB;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAoB,CAAC,GAAGb,eAAe,CAAC,CAAC;EACpF,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAgB,IAAI,CAAC;EAEzE,MAAMqB,YAAY,GAAG,MAAOC,IAAqB,IAAK;IACpD,MAAMC,MAAM,GAAG,MAAMR,iBAAiB,CAACO,IAAI,CAAC;IAC5C,IAAIC,MAAM,EAAE;MACVH,iBAAiB,CAAC,kCAAkC,CAAC;MACrDN,eAAe,CAAC,CAAC;MACjBI,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACN,MAAM;MAACwB,YAAY,EAAEZ,eAAe,CAAC,CAAE;MAACa,QAAQ,EAAC,kBAAkB;MAACC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAE;MAACC,YAAY,EAAEZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnHzB,OAAA;MAAK0B,SAAS,EAAC,MAAM;MAAAT,QAAA,GAClBL,cAAc,iBACbZ,OAAA;QAAK0B,SAAS,EAAC,MAAM;QAAAT,QAAA,eACnBjB,OAAA,CAACJ,cAAc;UAAC+B,OAAO,EAAEf,cAAe;UAACgB,QAAQ,EAAE,IAAK;UAACC,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAAC,IAAI;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CACN,eACDzB,OAAA,CAACL,YAAY;QACXU,QAAQ,EAAEA,QAAS;QACnByB,QAAQ,EAAEhB,YAAa;QACvBL,OAAO,EAAEA,OAAQ;QACjBC,KAAK,EAAEA;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACrB,EAAA,CAhCID,YAAsB;EAAA,QAC6BN,WAAW,EACCC,eAAe;AAAA;AAAAiC,EAAA,GAF9E5B,YAAsB;AAkC5B,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
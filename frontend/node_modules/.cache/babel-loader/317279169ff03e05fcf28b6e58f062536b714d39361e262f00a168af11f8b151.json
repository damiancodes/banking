{"ast":null,"code":"var _jsxFileName = \"/home/damien/Desktop/Treasury Movement Simulator/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const accountsHook = useAccounts();\n  const transactionsHook = useTransactions();\n  let content;\n  switch (currentPage) {\n    case 'dashboard':\n      content = /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this);\n      break;\n    case 'accounts':\n      content = /*#__PURE__*/_jsxDEV(AccountList, {\n        accounts: accountsHook.accounts,\n        loading: accountsHook.loading,\n        error: accountsHook.error,\n        onRetry: accountsHook.refreshAccounts,\n        showDetails: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n      break;\n    case 'transfers':\n      content = /*#__PURE__*/_jsxDEV(TransferPage, {\n        onNavigate: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n      break;\n    case 'transactions':\n      content = /*#__PURE__*/_jsxDEV(TransactionHistory, {\n        transactions: transactionsHook.transactions,\n        loading: transactionsHook.loading,\n        error: transactionsHook.error,\n        refreshTransactions: transactionsHook.refreshTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n      break;\n    default:\n      content = /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    header: null,\n    footer: null,\n    currentPage: currentPage,\n    onNavigate: setCurrentPage,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NZ1NsxmIK1roc6Xedm4/ugQyze4=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","useState","accountsHook","useAccounts","transactionsHook","useTransactions","content","Dashboard","fileName","_jsxFileName","lineNumber","columnNumber","AccountList","accounts","loading","error","onRetry","refreshAccounts","showDetails","TransferPage","onNavigate","TransactionHistory","transactions","refreshTransactions","Layout","header","footer","children","_c","$RefreshReg$"],"sources":["/home/damien/Desktop/Treasury Movement Simulator/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\n\nconst App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const accountsHook = useAccounts();\n  const transactionsHook = useTransactions();\n\n  let content;\n  switch (currentPage) {\n    case 'dashboard':\n      content = <Dashboard />;\n      break;\n    case 'accounts':\n      content = (\n        <AccountList\n          accounts={accountsHook.accounts}\n          loading={accountsHook.loading}\n          error={accountsHook.error}\n          onRetry={accountsHook.refreshAccounts}\n          showDetails={true}\n        />\n      );\n      break;\n    case 'transfers':\n      content = (\n        <TransferPage onNavigate={setCurrentPage} />\n      );\n      break;\n    case 'transactions':\n      content = (\n        <TransactionHistory\n          transactions={transactionsHook.transactions}\n          loading={transactionsHook.loading}\n          error={transactionsHook.error}\n          refreshTransactions={transactionsHook.refreshTransactions}\n        />\n      );\n      break;\n    default:\n      content = <Dashboard />;\n  }\n\n  return (\n    <Layout\n      header={null}\n      footer={null}\n      currentPage={currentPage}\n      onNavigate={setCurrentPage}\n    >\n      {content}\n    </Layout>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,WAAW,CAAC;EAC3D,MAAMC,YAAY,GAAGC,WAAW,CAAC,CAAC;EAClC,MAAMC,gBAAgB,GAAGC,eAAe,CAAC,CAAC;EAE1C,IAAIC,OAAO;EACX,QAAQP,WAAW;IACjB,KAAK,WAAW;MACdO,OAAO,gBAAGV,OAAA,CAACW,SAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvB;IACF,KAAK,UAAU;MACbL,OAAO,gBACLV,OAAA,CAACgB,WAAW;QACVC,QAAQ,EAAEX,YAAY,CAACW,QAAS;QAChCC,OAAO,EAAEZ,YAAY,CAACY,OAAQ;QAC9BC,KAAK,EAAEb,YAAY,CAACa,KAAM;QAC1BC,OAAO,EAAEd,YAAY,CAACe,eAAgB;QACtCC,WAAW,EAAE;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CACF;MACD;IACF,KAAK,WAAW;MACdL,OAAO,gBACLV,OAAA,CAACuB,YAAY;QAACC,UAAU,EAAEpB;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC5C;MACD;IACF,KAAK,cAAc;MACjBL,OAAO,gBACLV,OAAA,CAACyB,kBAAkB;QACjBC,YAAY,EAAElB,gBAAgB,CAACkB,YAAa;QAC5CR,OAAO,EAAEV,gBAAgB,CAACU,OAAQ;QAClCC,KAAK,EAAEX,gBAAgB,CAACW,KAAM;QAC9BQ,mBAAmB,EAAEnB,gBAAgB,CAACmB;MAAoB;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CACF;MACD;IACF;MACEL,OAAO,gBAAGV,OAAA,CAACW,SAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;EAC3B;EAEA,oBACEf,OAAA,CAAC4B,MAAM;IACLC,MAAM,EAAE,IAAK;IACbC,MAAM,EAAE,IAAK;IACb3B,WAAW,EAAEA,WAAY;IACzBqB,UAAU,EAAEpB,cAAe;IAAA2B,QAAA,EAE1BrB;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACb,EAAA,CAlDID,GAAa;AAAA+B,EAAA,GAAb/B,GAAa;AAoDnB,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
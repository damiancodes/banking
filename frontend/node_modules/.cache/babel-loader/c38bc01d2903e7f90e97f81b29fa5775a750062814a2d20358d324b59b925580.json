{"ast":null,"code":"var _jsxFileName = \"/home/damien/Desktop/Treasury Movement Simulator/frontend/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAccounts } from '../hooks/useAccounts';\nimport { useTransactions } from '../hooks/useTransactions';\nimport Header from '../components/Header';\nimport BalanceCard from '../components/BalanceCard';\nimport AccountList from '../components/AccountList';\nimport TransactionLog from '../components/TransactionLog';\nimport TransferForm from '../components/TransferForm';\nimport QuickActions from '../components/QuickActions';\nimport TransactionChart from '../components/TransactionChart';\nimport { useToasts } from '../components/ToastContainer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('overview');\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const {\n    showSuccess,\n    showError\n  } = useToasts();\n  const {\n    accounts,\n    summary,\n    loading: accountsLoading,\n    error: accountsError,\n    getAccountsByurrency,\n    getTotalBalance,\n    refreshAccounts\n  } = useAccounts();\n  const {\n    transactions,\n    loading: transactionsLoading,\n    error: transactionsError,\n    creating: transferLoading,\n    createTransaction,\n    getRecentTransactions,\n    refreshTransactions\n  } = useTransactions();\n  const handleRefresh = async () => {\n    try {\n      await Promise.all([refreshAccounts(), refreshTransactions()]);\n      showSuccess('Refreshed', 'Data updated successfully');\n    } catch (error) {\n      showError('Refresh Failed', 'Unable to update data');\n    }\n  };\n  const handleTransfer = async transferData => {\n    try {\n      const result = await createTransaction(transferData);\n      if (result) {\n        var _transferData$note;\n        // Check if it's a future transfer\n        const isFutureTransfer = ((_transferData$note = transferData.note) === null || _transferData$note === void 0 ? void 0 : _transferData$note.includes('transfer_date:')) && new Date(transferData.note.split('transfer_date:')[1]) > new Date();\n        if (isFutureTransfer) {\n          showSuccess('Transfer Scheduled!', 'Your transfer has been scheduled for the selected date.');\n        } else {\n          showSuccess('Transfer Completed!', `Transfer of ${result.formatted_amount} completed successfully!`);\n        }\n        setCurrentView('overview');\n        refreshAccounts(); // Refresh to get updated balances\n      }\n    } catch (error) {\n      showError('Transfer Failed', 'There was an error processing your transfer');\n    }\n  };\n  const handleAccountSelect = account => {\n    setSelectedAccount(account);\n    setCurrentView('transfer');\n  };\n  const handleCurrencySelect = currency => {\n    setSelectedCurrency(currency);\n    setCurrentView('accounts');\n  };\n  const handleTransactionClick = transaction => {\n    // Could navigate to transaction details or show modal\n    console.log('Transaction clicked:', transaction);\n  };\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'accounts':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between px-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('overview'),\n              className: \"flex items-center text-kcb-primary hover:text-kcb-secondary transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 mr-1\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M15 19l-7-7 7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), \"Back to Overview\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-lg font-semibold\",\n              children: selectedCurrency ? `${selectedCurrency} Accounts` : 'All Accounts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountList, {\n            accounts: selectedCurrency ? getAccountsByurrency(selectedCurrency) : accounts,\n            loading: accountsLoading,\n            error: accountsError,\n            onAccountSelect: handleAccountSelect,\n            showDetails: true,\n            onRetry: refreshAccounts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n      case 'transfer':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center px-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('overview'),\n              className: \"flex items-center text-kcb-primary hover:text-kcb-secondary transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 mr-1\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M15 19l-7-7 7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), \"Back to Overview\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: /*#__PURE__*/_jsxDEV(TransferForm, {\n              accounts: accounts,\n              onSubmit: handleTransfer,\n              loading: transferLoading,\n              error: transactionsError,\n              initialFromAccount: selectedAccount,\n              onCancel: () => setCurrentView('overview')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this);\n      case 'history':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center px-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentView('overview'),\n              className: \"flex items-center text-kcb-primary hover:text-kcb-secondary transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-5 h-5 mr-1\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M15 19l-7-7 7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), \"Back to Overview\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: /*#__PURE__*/_jsxDEV(TransactionLog, {\n              transactions: transactions,\n              loading: transactionsLoading,\n              error: transactionsError,\n              onTransactionClick: handleTransactionClick,\n              showFilters: true,\n              onRetry: refreshTransactions,\n              title: \"Transaction History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this);\n      default:\n        // overview\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(QuickActions, {\n            onTransferClick: () => setCurrentView('transfer'),\n            onHistoryClick: () => setCurrentView('history'),\n            onRefreshClick: handleRefresh,\n            isRefreshing: accountsLoading || transactionsLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BalanceCard, {\n            summary: summary,\n            onCurrencySelect: handleCurrencySelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: /*#__PURE__*/_jsxDEV(TransactionChart, {\n              transactions: transactions,\n              className: \"mb-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full sm:w-auto order-2 sm:order-1\",\n                children: /*#__PURE__*/_jsxDEV(AccountList, {\n                  accounts: accounts.slice(0, 4) // Show first 4 accounts\n                  ,\n                  loading: accountsLoading,\n                  error: accountsError,\n                  onAccountSelect: handleAccountSelect,\n                  onRetry: refreshAccounts\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setCurrentView('accounts'),\n                className: \"text-kcb-primary text-sm font-medium hover:text-kcb-secondary transition-colors order-1 sm:order-2 self-end sm:self-auto\",\n                children: \"View All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4\",\n            children: /*#__PURE__*/_jsxDEV(TransactionLog, {\n              transactions: getRecentTransactions(5),\n              loading: transactionsLoading,\n              error: transactionsError,\n              onTransactionClick: handleTransactionClick,\n              showFilters: false,\n              onRetry: refreshTransactions,\n              title: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      totalBalance: getTotalBalance(),\n      userName: \"Treasury Manager\",\n      onRefresh: handleRefresh,\n      isRefreshing: accountsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-6\",\n      children: renderCurrentView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"wfzdZGyaP/651yVHFyVZtDvQjgI=\", false, function () {\n  return [useToasts, useAccounts, useTransactions];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useAccounts","useTransactions","Header","BalanceCard","AccountList","TransactionLog","TransferForm","QuickActions","TransactionChart","useToasts","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","currentView","setCurrentView","selectedAccount","setSelectedAccount","selectedCurrency","setSelectedCurrency","showSuccess","showError","accounts","summary","loading","accountsLoading","error","accountsError","getAccountsByurrency","getTotalBalance","refreshAccounts","transactions","transactionsLoading","transactionsError","creating","transferLoading","createTransaction","getRecentTransactions","refreshTransactions","handleRefresh","Promise","all","handleTransfer","transferData","result","_transferData$note","isFutureTransfer","note","includes","Date","split","formatted_amount","handleAccountSelect","account","handleCurrencySelect","currency","handleTransactionClick","transaction","console","log","renderCurrentView","className","children","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","onAccountSelect","showDetails","onRetry","onSubmit","initialFromAccount","onCancel","onTransactionClick","showFilters","title","onTransferClick","onHistoryClick","onRefreshClick","isRefreshing","onCurrencySelect","slice","totalBalance","userName","onRefresh","_c","$RefreshReg$"],"sources":["/home/damien/Desktop/Treasury Movement Simulator/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Account, Transaction } from '../types';\nimport { useAccounts } from '../hooks/useAccounts';\nimport { useTransactions } from '../hooks/useTransactions';\nimport Header from '../components/Header';\nimport BalanceCard from '../components/BalanceCard';\nimport AccountList from '../components/AccountList';\nimport TransactionLog from '../components/TransactionLog';\nimport TransferForm from '../components/TransferForm';\nimport QuickActions from '../components/QuickActions';\nimport TransactionChart from '../components/TransactionChart';\nimport { useToasts } from '../components/ToastContainer';\n\ntype ViewMode = 'overview' | 'accounts' | 'transfer' | 'history';\n\nconst Dashboard: React.FC = () => {\n  const [currentView, setCurrentView] = useState<ViewMode>('overview');\n  const [selectedAccount, setSelectedAccount] = useState<Account | null>(null);\n  const [selectedCurrency, setSelectedCurrency] = useState<string | null>(null);\n  const { showSuccess, showError } = useToasts();\n\n  const {\n    accounts,\n    summary,\n    loading: accountsLoading,\n    error: accountsError,\n    getAccountsByurrency,\n    getTotalBalance,\n    refreshAccounts\n  } = useAccounts();\n\n  const {\n    transactions,\n    loading: transactionsLoading,\n    error: transactionsError,\n    creating: transferLoading,\n    createTransaction,\n    getRecentTransactions,\n    refreshTransactions\n  } = useTransactions();\n\n  const handleRefresh = async () => {\n    try {\n      await Promise.all([refreshAccounts(), refreshTransactions()]);\n      showSuccess('Refreshed', 'Data updated successfully');\n    } catch (error) {\n      showError('Refresh Failed', 'Unable to update data');\n    }\n  };\n\n  const handleTransfer = async (transferData: any) => {\n    try {\n      const result = await createTransaction(transferData);\n      if (result) {\n        // Check if it's a future transfer\n        const isFutureTransfer = transferData.note?.includes('transfer_date:') && \n          new Date(transferData.note.split('transfer_date:')[1]) > new Date();\n        \n        if (isFutureTransfer) {\n          showSuccess(\n            'Transfer Scheduled!', \n            'Your transfer has been scheduled for the selected date.'\n          );\n        } else {\n          showSuccess(\n            'Transfer Completed!', \n            `Transfer of ${result.formatted_amount} completed successfully!`\n          );\n        }\n        \n        setCurrentView('overview');\n        refreshAccounts(); // Refresh to get updated balances\n      }\n    } catch (error) {\n      showError('Transfer Failed', 'There was an error processing your transfer');\n    }\n  };\n\n  const handleAccountSelect = (account: Account) => {\n    setSelectedAccount(account);\n    setCurrentView('transfer');\n  };\n\n  const handleCurrencySelect = (currency: string) => {\n    setSelectedCurrency(currency);\n    setCurrentView('accounts');\n  };\n\n  const handleTransactionClick = (transaction: Transaction) => {\n    // Could navigate to transaction details or show modal\n    console.log('Transaction clicked:', transaction);\n  };\n\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'accounts':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between px-4\">\n              <button\n                onClick={() => setCurrentView('overview')}\n                className=\"flex items-center text-kcb-primary hover:text-kcb-secondary transition-colors\"\n              >\n                <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n                Back to Overview\n              </button>\n              <h1 className=\"text-lg font-semibold\">\n                {selectedCurrency ? `${selectedCurrency} Accounts` : 'All Accounts'}\n              </h1>\n            </div>\n            <AccountList\n              accounts={selectedCurrency ? getAccountsByurrency(selectedCurrency) : accounts}\n              loading={accountsLoading}\n              error={accountsError}\n              onAccountSelect={handleAccountSelect}\n              showDetails={true}\n              onRetry={refreshAccounts}\n            />\n          </div>\n        );\n\n      case 'transfer':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center px-4\">\n              <button\n                onClick={() => setCurrentView('overview')}\n                className=\"flex items-center text-kcb-primary hover:text-kcb-secondary transition-colors\"\n              >\n                <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n                Back to Overview\n              </button>\n            </div>\n            <div className=\"px-4\">\n              <TransferForm\n                accounts={accounts}\n                onSubmit={handleTransfer}\n                loading={transferLoading}\n                error={transactionsError}\n                initialFromAccount={selectedAccount}\n                onCancel={() => setCurrentView('overview')}\n              />\n            </div>\n          </div>\n        );\n\n      case 'history':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center px-4\">\n              <button\n                onClick={() => setCurrentView('overview')}\n                className=\"flex items-center text-kcb-primary hover:text-kcb-secondary transition-colors\"\n              >\n                <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n                Back to Overview\n              </button>\n            </div>\n            <div className=\"px-4\">\n              <TransactionLog\n                transactions={transactions}\n                loading={transactionsLoading}\n                error={transactionsError}\n                onTransactionClick={handleTransactionClick}\n                showFilters={true}\n                onRetry={refreshTransactions}\n                title=\"Transaction History\"\n              />\n            </div>\n          </div>\n        );\n\n      default: // overview\n        return (\n          <div className=\"space-y-6\">\n            <QuickActions\n              onTransferClick={() => setCurrentView('transfer')}\n              onHistoryClick={() => setCurrentView('history')}\n              onRefreshClick={handleRefresh}\n              isRefreshing={accountsLoading || transactionsLoading}\n            />\n\n            <BalanceCard\n              summary={summary}\n              onCurrencySelect={handleCurrencySelect}\n            />\n\n            {/* Analytics Section */}\n            <div className=\"px-4\">\n              <TransactionChart \n                transactions={transactions} \n                className=\"mb-6\"\n              />\n            </div>\n\n            <div className=\"px-4\">\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 mb-2\">\n                <div className=\"w-full sm:w-auto order-2 sm:order-1\">\n                  <AccountList\n                    accounts={accounts.slice(0, 4)} // Show first 4 accounts\n                    loading={accountsLoading}\n                    error={accountsError}\n                    onAccountSelect={handleAccountSelect}\n                    onRetry={refreshAccounts}\n                  />\n                </div>\n                <button\n                  onClick={() => setCurrentView('accounts')}\n                  className=\"text-kcb-primary text-sm font-medium hover:text-kcb-secondary transition-colors order-1 sm:order-2 self-end sm:self-auto\"\n                >\n                  View All\n                </button>\n              </div>\n            </div>\n\n            <div className=\"px-4\">\n              <TransactionLog\n                transactions={getRecentTransactions(5)}\n                loading={transactionsLoading}\n                error={transactionsError}\n                onTransactionClick={handleTransactionClick}\n                showFilters={false}\n                onRetry={refreshTransactions}\n                title=\"Recent Activity\"\n              />\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <>\n      <Header\n        totalBalance={getTotalBalance()}\n        userName=\"Treasury Manager\"\n        onRefresh={handleRefresh}\n        isRefreshing={accountsLoading}\n      />\n      <div className=\"pt-6\">\n        {renderCurrentView()}\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
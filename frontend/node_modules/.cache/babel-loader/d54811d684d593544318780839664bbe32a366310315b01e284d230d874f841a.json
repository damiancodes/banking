{"ast":null,"code":"var _jsxFileName = \"/home/damien/Desktop/Treasury Movement Simulator/frontend/src/components/LoadingSpinner.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'md',\n  variant = 'default',\n  text,\n  className = '',\n  color = 'primary'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8',\n    xl: 'w-12 h-12'\n  };\n  const colorClasses = {\n    primary: 'border-gray-300 border-t-kcb-primary',\n    white: 'border-white border-opacity-30 border-t-white',\n    gray: 'border-gray-300 border-t-gray-600'\n  };\n  const renderSpinner = () => {\n    switch (variant) {\n      case 'dots':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-1\",\n          children: [0, 1, 2].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${sizeClasses[size]} bg-kcb-primary rounded-full animate-pulse`,\n            style: {\n              animationDelay: `${i * 0.2}s`\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      case 'pulse':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${sizeClasses[size]} bg-kcb-primary rounded-full animate-ping`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `animate-spin rounded-full border-2 ${colorClasses[color]} ${sizeClasses[size]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center ${className}`,\n    children: [renderSpinner(), text && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm text-gray-600 font-medium\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n// Skeleton loader component\n_c = LoadingSpinner;\nexport const SkeletonLoader = ({\n  className = '',\n  lines = 1\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `animate-pulse ${className}`,\n    children: Array.from({\n      length: lines\n    }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-4 bg-gray-200 rounded mb-2\",\n      style: {\n        width: `${Math.random() * 40 + 60}%`\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n// Button loading state\n_c2 = SkeletonLoader;\nexport const ButtonSpinner = ({\n  size = 'md'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-5 h-5'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `animate-spin rounded-full border-2 border-white border-opacity-30 border-t-white ${sizeClasses[size]}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ButtonSpinner;\nexport default LoadingSpinner;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoadingSpinner\");\n$RefreshReg$(_c2, \"SkeletonLoader\");\n$RefreshReg$(_c3, \"ButtonSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","variant","text","className","color","sizeClasses","sm","md","lg","xl","colorClasses","primary","white","gray","renderSpinner","children","map","i","style","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","_c","SkeletonLoader","lines","Array","from","length","_","width","Math","random","_c2","ButtonSpinner","_c3","$RefreshReg$"],"sources":["/home/damien/Desktop/Treasury Movement Simulator/frontend/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  variant?: 'default' | 'dots' | 'pulse';\n  text?: string;\n  className?: string;\n  color?: 'primary' | 'white' | 'gray';\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md', \n  variant = 'default',\n  text,\n  className = '',\n  color = 'primary'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8',\n    xl: 'w-12 h-12'\n  };\n\n  const colorClasses = {\n    primary: 'border-gray-300 border-t-kcb-primary',\n    white: 'border-white border-opacity-30 border-t-white',\n    gray: 'border-gray-300 border-t-gray-600'\n  };\n\n  const renderSpinner = () => {\n    switch (variant) {\n      case 'dots':\n        return (\n          <div className=\"flex space-x-1\">\n            {[0, 1, 2].map((i) => (\n              <div\n                key={i}\n                className={`${sizeClasses[size]} bg-kcb-primary rounded-full animate-pulse`}\n                style={{ animationDelay: `${i * 0.2}s` }}\n              />\n            ))}\n          </div>\n        );\n      \n      case 'pulse':\n        return (\n          <div className={`${sizeClasses[size]} bg-kcb-primary rounded-full animate-ping`} />\n        );\n      \n      default:\n        return (\n          <div className={`animate-spin rounded-full border-2 ${colorClasses[color]} ${sizeClasses[size]}`} />\n        );\n    }\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center ${className}`}>\n      {renderSpinner()}\n      {text && (\n        <p className=\"mt-2 text-sm text-gray-600 font-medium\">{text}</p>\n      )}\n    </div>\n  );\n};\n\n// Skeleton loader component\nexport const SkeletonLoader: React.FC<{ className?: string; lines?: number }> = ({ \n  className = '', \n  lines = 1 \n}) => {\n  return (\n    <div className={`animate-pulse ${className}`}>\n      {Array.from({ length: lines }).map((_, i) => (\n        <div\n          key={i}\n          className=\"h-4 bg-gray-200 rounded mb-2\"\n          style={{ width: `${Math.random() * 40 + 60}%` }}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Button loading state\nexport const ButtonSpinner: React.FC<{ size?: 'sm' | 'md' }> = ({ size = 'md' }) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-5 h-5'\n  };\n\n  return (\n    <div className={`animate-spin rounded-full border-2 border-white border-opacity-30 border-t-white ${sizeClasses[size]}`} />\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
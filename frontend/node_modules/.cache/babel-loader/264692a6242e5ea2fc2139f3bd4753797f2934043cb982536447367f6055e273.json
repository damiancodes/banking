{"ast":null,"code":"var _jsxFileName = \"/home/damien/Desktop/Treasury Movement Simulator/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Sidebar from './components/Sidebar';\n// import TransferForm from './components/TransferForm';\n\n// const App: React.FC = () => {\n//   const [currentPage, setCurrentPage] = useState('dashboard');\n\n//   const renderContent = () => {\n//     switch (currentPage) {\n//       case 'transfer':\n//         return <TransferForm accounts={[]} onSubmit={async () => {}} />;\n//       case 'transactions':\n//         return <div className=\"p-8\"><h1 className=\"text-2xl\">Transactions Page</h1></div>;\n//       case 'history':\n//         return <div className=\"p-8\"><h1 className=\"text-2xl\">Transaction History Page</h1></div>;\n//       default:\n//         return (\n//           <div className=\"p-8\">\n//             <h1 className=\"text-3xl font-bold text-kcb-primary mb-8\">\n//               Treasury Movement Simulator Dashboard\n//             </h1>\n\n//             <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//               <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">KES Accounts</h2>\n//                 <p className=\"text-3xl font-bold text-currency-kes\">KSh 225,000.00</p>\n//                 <p className=\"text-sm text-gray-600\">3 accounts</p>\n//               </div>\n\n//               <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">USD Accounts</h2>\n//                 <p className=\"text-3xl font-bold text-currency-usd\">$ 25,000.00</p>\n//                 <p className=\"text-sm text-gray-600\">4 accounts</p>\n//               </div>\n\n//               <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">NGN Accounts</h2>\n//                 <p className=\"text-3xl font-bold text-currency-ngn\">â‚¦ 1,500,000.00</p>\n//                 <p className=\"text-sm text-gray-600\">3 accounts</p>\n//               </div>\n//             </div>\n\n//             <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//               <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Quick Actions</h2>\n//               <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n//                 <button \n//                   onClick={() => setCurrentPage('transfer')}\n//                   className=\"bg-kcb-primary text-white px-6 py-3 rounded-lg hover:bg-kcb-secondary transition-colors font-medium\"\n//                 >\n//                   ðŸ“¤ Send Money\n//                 </button>\n//                 <button \n//                   onClick={() => setCurrentPage('transactions')}\n//                   className=\"bg-kcb-primary text-white px-6 py-3 rounded-lg hover:bg-kcb-secondary transition-colors font-medium\"\n//                 >\n//                   ðŸ“‹ View Transactions\n//                 </button>\n//                 <button \n//                   onClick={() => setCurrentPage('history')}\n//                   className=\"bg-kcb-primary text-white px-6 py-3 rounded-lg hover:bg-kcb-secondary transition-colors font-medium\"\n//                 >\n//                   ðŸ•’ Transaction History\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex min-h-screen bg-gray-50\">\n//       <Sidebar current={currentPage} onNavigate={setCurrentPage} />\n//       <div className=\"flex-1 ml-64\">\n//         {renderContent()}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport Layout from './components/Layout';\nimport Dashboard from './pages/Dashboard';\nimport TransferPage from './pages/TransferPage';\nimport TransactionHistory from './pages/TransactionHistory';\nimport { useTransactions } from './hooks/useTransactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('dashboard');\n  const {\n    transactions,\n    loading,\n    error,\n    refreshTransactions\n  } = useTransactions();\n  const handleNavigate = page => {\n    if (page === 'dashboard' || page === 'transfer' || page === 'transactions' || page === 'history') {\n      setCurrentPage(page);\n    }\n  };\n  const renderContent = () => {\n    switch (currentPage) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this);\n      case 'transfer':\n        return /*#__PURE__*/_jsxDEV(TransferPage, {\n          onNavigate: handleNavigate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this);\n      case 'transactions':\n        return /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          transactions: transactions,\n          loading: loading,\n          error: error,\n          refreshTransactions: refreshTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n      case 'history':\n        return /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          transactions: transactions,\n          loading: loading,\n          error: error,\n          refreshTransactions: refreshTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    currentPage: currentPage,\n    onNavigate: handleNavigate,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f/lttJhkdL2tRZWBo2t/8WStovg=\", false, function () {\n  return [useTransactions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Layout","Dashboard","TransferPage","TransactionHistory","useTransactions","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","transactions","loading","error","refreshTransactions","handleNavigate","page","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","onNavigate","children","_c","$RefreshReg$"],"sources":["/home/damien/Desktop/Treasury Movement Simulator/frontend/src/App.tsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import Sidebar from './components/Sidebar';\n// import TransferForm from './components/TransferForm';\n\n// const App: React.FC = () => {\n//   const [currentPage, setCurrentPage] = useState('dashboard');\n\n//   const renderContent = () => {\n//     switch (currentPage) {\n//       case 'transfer':\n//         return <TransferForm accounts={[]} onSubmit={async () => {}} />;\n//       case 'transactions':\n//         return <div className=\"p-8\"><h1 className=\"text-2xl\">Transactions Page</h1></div>;\n//       case 'history':\n//         return <div className=\"p-8\"><h1 className=\"text-2xl\">Transaction History Page</h1></div>;\n//       default:\n//         return (\n//           <div className=\"p-8\">\n//             <h1 className=\"text-3xl font-bold text-kcb-primary mb-8\">\n//               Treasury Movement Simulator Dashboard\n//             </h1>\n            \n//             <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n//               <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">KES Accounts</h2>\n//                 <p className=\"text-3xl font-bold text-currency-kes\">KSh 225,000.00</p>\n//                 <p className=\"text-sm text-gray-600\">3 accounts</p>\n//               </div>\n              \n//               <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">USD Accounts</h2>\n//                 <p className=\"text-3xl font-bold text-currency-usd\">$ 25,000.00</p>\n//                 <p className=\"text-sm text-gray-600\">4 accounts</p>\n//               </div>\n              \n//               <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//                 <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">NGN Accounts</h2>\n//                 <p className=\"text-3xl font-bold text-currency-ngn\">â‚¦ 1,500,000.00</p>\n//                 <p className=\"text-sm text-gray-600\">3 accounts</p>\n//               </div>\n//             </div>\n\n//             <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n//               <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Quick Actions</h2>\n//               <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n//                 <button \n//                   onClick={() => setCurrentPage('transfer')}\n//                   className=\"bg-kcb-primary text-white px-6 py-3 rounded-lg hover:bg-kcb-secondary transition-colors font-medium\"\n//                 >\n//                   ðŸ“¤ Send Money\n//                 </button>\n//                 <button \n//                   onClick={() => setCurrentPage('transactions')}\n//                   className=\"bg-kcb-primary text-white px-6 py-3 rounded-lg hover:bg-kcb-secondary transition-colors font-medium\"\n//                 >\n//                   ðŸ“‹ View Transactions\n//                 </button>\n//                 <button \n//                   onClick={() => setCurrentPage('history')}\n//                   className=\"bg-kcb-primary text-white px-6 py-3 rounded-lg hover:bg-kcb-secondary transition-colors font-medium\"\n//                 >\n//                   ðŸ•’ Transaction History\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex min-h-screen bg-gray-50\">\n//       <Sidebar current={currentPage} onNavigate={setCurrentPage} />\n//       <div className=\"flex-1 ml-64\">\n//         {renderContent()}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nimport React, { useState } from 'react';\nimport Layout from './components/Layout';\nimport Dashboard from './pages/Dashboard';\nimport TransferPage from './pages/TransferPage';\nimport TransactionHistory from './pages/TransactionHistory';\nimport { useTransactions } from './hooks/useTransactions';\n\ntype Page = 'dashboard' | 'transfer' | 'transactions' | 'history';\n\nconst App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<Page>('dashboard');\n  const { transactions, loading, error, refreshTransactions } = useTransactions();\n\n  const handleNavigate = (page: string) => {\n    if (page === 'dashboard' || page === 'transfer' || page === 'transactions' || page === 'history') {\n      setCurrentPage(page as Page);\n    }\n  };\n\n  const renderContent = () => {\n    switch (currentPage) {\n      case 'dashboard':\n        return <Dashboard />;\n      case 'transfer':\n        return <TransferPage onNavigate={handleNavigate} />;\n      case 'transactions':\n        return (\n          <TransactionHistory\n            transactions={transactions}\n            loading={loading}\n            error={error}\n            refreshTransactions={refreshTransactions}\n          />\n        );\n      case 'history':\n        return (\n          <TransactionHistory\n            transactions={transactions}\n            loading={loading}\n            error={error}\n            refreshTransactions={refreshTransactions}\n          />\n        );\n      default:\n        return <Dashboard />;\n    }\n  };\n\n  return (\n    <Layout\n      currentPage={currentPage}\n      onNavigate={handleNavigate}\n    >\n      {renderContent()}\n    </Layout>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}